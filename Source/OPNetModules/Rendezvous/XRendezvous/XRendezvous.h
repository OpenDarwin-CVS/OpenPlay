/*	11/14/02 * *	Rocco Bowling *	Feline Entertainment *	http://homepage.mac.com/felinegames *	http://homepage.mac.com/felinegames/games/thebelt/index.html *	felinegames@mac.com *	 *	This source code is part of The Belt, my entry in the 2002 uDevGame Mac Game Programming *	contest (refer to www.idevgames.com for more details).  My main goal for The Belt in  *	relation to the purpose of the contest was to create a game which was cross platform *	Mac and Windows from the same CodeWarrior project, without relying on third-party *	cross platform libraries.  Hence, in the bowels of this code you will find functions *	which handle the Mac case, as well as the functions which handles the Windows case. *	Most of the cross platform issues are encapsulated in the engine code, which allows *	you to modify The Belt itself in an easy, platform independent manner.  The Belt *	is also an example of good program design, with modular pieces of code, as well *	as centralized object and application managers. * *	For the record, this program is provided on an "as-is" basis for educational purposes *	only.  The source code is subject to the uDevGame Source Code License, so please refer *	to that if you have any questions. * *	If you have any questions specific to the code, feel free to send me an email. */#ifndef _X_RENDEZVOUS_H_#define _X_RENDEZVOUS_H_#pragma mark *** Includes ***#include "XNetwork.h"#pragma mark *** Definitions ***typedef struct{	char domain[32];	char type[32];	char name[32];	short port;		void (*errorPtr)(char *);	void (*resultPtr)(int i);}xr_service;#pragma mark *** Globals ***#pragma mark *** Prototypes ***extern int initRendezvousManager();extern void destructRendezvousManager();extern xr_service createNewService(char * domain, char * type, char * name, short port);extern void removeService(char * type);extern void setServerErrorCallback(xr_service * service, void (*ptr)(char *));extern void setServerResultCallback(xr_service * service, void (*ptr)(int i));extern int lookupService(char * service, void (*ptr)(char * name, net_address));extern int getFirstServiceFound(char name[64], net_address * address);extern int getNextServiceFound(char name[64], net_address * address);extern int getNumberOfServicesFound();extern char * getServiceName(xr_service * srv);extern char * getComputerName();extern char * getUserName();#endif